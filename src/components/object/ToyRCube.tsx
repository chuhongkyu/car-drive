/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 toy_cube.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useBox, useCylinder } from '@react-three/cannon'

type GLTFResult = GLTF & {
  nodes: {
    cube: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

export function ToyRCube(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/toy_cube.glb') as GLTFResult
  const [ref] = useCylinder(
    () => ({ 
        type: 'Static', 
        material: 'ground',
        args: [0.3, 0.3, 1, 16],
        position: [4.36,0.22,-2.5],
        rotation: [0,Math.PI/2,0]
    }), useRef(null)
  );

  return (
    <group ref={ref}>
      <mesh position={[0.1,-0.5,0.2]} geometry={nodes.cube.geometry} material={materials.Material} />
    </group>
  )
}

useGLTF.preload('/models/toy_cube.glb')
